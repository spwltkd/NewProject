plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.newproject"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            applicationIdSuffix '.release'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
//        alpha{
//            applicationIdSuffix '.alpha'
//            debuggable true
//            minifyEnabled false
//        }
//        beta{
//            applicationIdSuffix '.alpha'
//            debuggable true
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
    }

    //이 부분이랑 위에 만든 alpha,beta 처럼 만들어서 빌드를 관리할 수 있었음
//    flavorDimensions "demo"
//    productFlavors{
//        //main이 디폴트 위치
////        main{
////            manifest.srcFile 'src/main/AndroidManifest.xml'
////            java.srcDirs = ['src/main/java']
////            res.srcDirs = ['src/main.res']
////        }
//        create("free"){
//            applicationId 'com.example.newproject.free'
//            versionCode 100
//            versionName '1.1.0'
//        }
//        create("paid"){
//            applicationId 'com.example.newproject.paid'
//            versionCode 101
//            versionName '1.0.0'
//        }
//    }

//    sourceSets{
//        free{
//            manifest.srcFile 'src/free/AndroidManifest.xml'
//            java.srcDirs = ['src/free/java']
//            res.srcDirs = ['src/free/res']
//        }
//        paid{
//            manifest.srcFile 'src/paid/AndroidManifest.xml'
//            java.srcDirs = ['src/paid/java']
//            res.srcDirs = ['src/paid/res']
//        }
//    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //DI
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-core-ext:$koin_version"
    testImplementation "org.koin:koin-test:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-androidx-fragment:$koin_version"
    implementation "org.koin:koin-androidx-ext:$koin_version"
    //통신 (retrofit)
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.5'
    //activity, fragment
    implementation 'androidx.activity:activity-ktx:1.3.0-beta02'
    implementation 'androidx.fragment:fragment:1.3.1'
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    //코루틴
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1"
    //ratioLayout
    implementation 'net.soulwolf.widget:ratiolayout:2.1.0'
    //zxing
    implementation 'com.google.zxing:core:3.4.1'
    implementation 'com.asksira.android:loopingviewpager:1.3.1'
    //firebase
    implementation platform('com.google.firebase:firebase-bom:26.8.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-database'
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    //카메라 테스트를 위한 코드 (cameraX) -> version이랑 사용하는 상태 나중에 추가로 확인하기
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:1.0.0-alpha20"

    //room
    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

}